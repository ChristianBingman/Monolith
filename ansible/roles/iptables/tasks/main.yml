- name: Default loopback input rule
  become: yes
  iptables:
    chain: INPUT
    jump: ACCEPT
    in_interface: lo
- name: Default loopback output rule
  become: yes
  iptables:
    chain: OUTPUT
    jump: ACCEPT
    out_interface: lo
- name: Allow established connections
  become: yes
  iptables:
    chain: INPUT
    ctstate: RELATED,ESTABLISHED
    jump: ACCEPT
- name: Allow established connections (output)
  become: yes
  iptables:
    chain: OUTPUT
    ctstate: RELATED,ESTABLISHED
    jump: ACCEPT
- name: Allow Private Ports (tcp)
  become: yes
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "{{ item }}"
    source: "{{ local_subnet }}"
    jump: ACCEPT
  loop: "{{ private_ports }}"
- name: Allow Private Ports (tcp & vpn)
  become: yes
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "{{ item }}"
    source: "{{ vpn_subnet }}"
    jump: ACCEPT
  loop: "{{ private_ports }}"
- name: Allow Private Ports (udp)
  become: yes
  iptables:
    chain: INPUT
    protocol: udp
    destination_port: "{{ item }}"
    source: "{{ local_subnet }}"
    jump: ACCEPT
  loop: "{{ private_ports_udp }}"
- name: Allow Private Ports (udp & vpn)
  become: yes
  iptables:
    chain: INPUT
    protocol: udp
    destination_port: "{{ item }}"
    source: "{{ vpn_subnet }}"
    jump: ACCEPT
  loop: "{{ private_ports_udp }}"
- name: Allow Public Ports (tcp)
  become: yes
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "{{ item }}"
    jump: ACCEPT
  loop: "{{ public_ports }}"
- name: Allow Public Ports (udp)
  become: yes
  iptables:
    chain: INPUT
    protocol: udp
    destination_port: "{{ item }}"
    jump: ACCEPT
  loop: "{{ public_ports_udp }}"
- name: Docker Management
  when: installDocker == "yes"
  become: yes
  block:
    - name: Allow Public Docker Ports
      iptables:
        chain: DOCKER-USER
        protocol: tcp
        destination_port: "{{ item }}"
        jump: RETURN
      loop: "{{ public_ports_docker }}"
    - name: Allow Public Docker Ports (udp)
      iptables:
        chain: DOCKER-USER
        protocol: udp
        destination_port: "{{ item }}"
        jump: RETURN
      loop: "{{ public_ports_docker_udp }}"
    - name: Allow Private Docker Ports (tcp)
      iptables:
        chain: DOCKER-USER
        protocol: tcp
        destination_port: "{{ item }}"
        source: "{{ local_subnet }}"
        jump: RETURN
      loop: "{{ private_ports_docker }}"
    - name: Allow Private Docker Ports (tcp & vpn)
      iptables:
        chain: DOCKER-USER
        protocol: tcp
        destination_port: "{{ item }}"
        source: "{{ vpn_subnet }}"
        jump: RETURN
      loop: "{{ private_ports_docker }}"
    - name: Allow Private Docker Ports (udp)
      iptables:
        chain: DOCKER-USER
        protocol: udp
        destination_port: "{{ item }}"
        source: "{{ local_subnet }}"
        jump: RETURN
      loop: "{{ private_ports_docker_udp }}"
    - name: Allow Private Docker Ports (udp & vpn)
      iptables:
        chain: DOCKER-USER
        protocol: udp
        destination_port: "{{ item }}"
        source: "{{ vpn_subnet }}"
        jump: RETURN
      loop: "{{ private_ports_docker_udp }}"
    - name: Delete default allow rule
      iptables:
        chain: DOCKER-USER
        state: absent
        jump: RETURN
- name: Disallow all INPUT traffic
  become: yes
  iptables:
    chain: INPUT
    policy: DROP
